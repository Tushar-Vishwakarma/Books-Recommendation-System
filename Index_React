import React, { useState } from 'react';

interface Book {
  id: number;
  title: string;
  author: string;
  genre: string;
  rating: number;
}

const books: Book[] = [
  { id: 1, title: 'To Kill a Mockingbird', author: 'Harper Lee', genre: 'Fiction', rating: 4.5 },
  { id: 2, title: '1984', author: 'George Orwell', genre: 'Dystopian', rating: 4.3 },
  { id: 3, title: 'Pride and Prejudice', author: 'Jane Austen', genre: 'Romance', rating: 4.2 },
  { id: 4, title: 'The Great Gatsby', author: 'F. Scott Fitzgerald', genre: 'Fiction', rating: 4.1 },
  { id: 5, title: 'The Catcher in the Rye', author: 'J.D. Salinger', genre: 'Fiction', rating: 4.0 },
];

const BookRecommendationSystem = () => {
  const [selectedGenre, setSelectedGenre] = useState('');
  const [recommendedBooks, setRecommendedBooks] = useState<Book[]>([]);
  const [searchQuery, setSearchQuery] = useState('');

  const handleGenreChange = (genre: string) => {
    setSelectedGenre(genre);
    const filteredBooks = books.filter((book) => book.genre === genre);
    setRecommendedBooks(filteredBooks);
  };

  const handleSearch = () => {
    const searchedBooks = books.filter((book) => book.title.toLowerCase().includes(searchQuery.toLowerCase()));
    setRecommendedBooks(searchedBooks);
  };

  return (
    <div className="max-w-6xl mx-auto p-4">
      <h1 className="text-3xl font-bold mb-4">AI Based Book Recommendation System</h1>
      <div className="flex flex-wrap justify-between mb-4">
        <div className="flex flex-wrap mb-2">
          <button
            className={`bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded ${selectedGenre === 'Fiction' ? 'bg-blue-700' : ''}`}
            onClick={() => handleGenreChange('Fiction')}
          >
            Fiction
          </button>
          <button
            className={`bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded ${selectedGenre === 'Dystopian' ? 'bg-blue-700' : ''}`}
            onClick={() => handleGenreChange('Dystopian')}
          >
            Dystopian
          </button>
          <button
            className={`bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded ${selectedGenre === 'Romance' ? 'bg-blue-700' : ''}`}
            onClick={() => handleGenreChange('Romance')}
          >
            Romance
          </button>
        </div>
        <div className="flex flex-wrap mb-2">
          <input
            type="text"
            className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            placeholder="Search for a book"
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
          />
          <button
            className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
            onClick={handleSearch}
          >
            Search
          </button>
        </div>
      </div>
      <div className="flex flex-wrap justify-between">
        {recommendedBooks.map((book) => (
          <div key={book.id} className="w-full md:w-1/2 xl:w-1/3 p-4">
            <div className="bg-white rounded shadow-md p-4">
              <h2 className="text-2xl font-bold mb-2">{book.title}</h2>
              <p className="text-gray-700 text-sm mb-2">By {book.author}</p>
              <p className="text-gray-700 text-sm mb-2">Genre: {book.genre}</p>
              <p className="text-gray-700 text-sm mb-2">Rating: {book.rating}/5</p>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default BookRecommendationSystem;
